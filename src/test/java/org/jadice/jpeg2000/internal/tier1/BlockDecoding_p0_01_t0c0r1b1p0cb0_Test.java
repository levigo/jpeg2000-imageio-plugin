/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.jadice.jpeg2000.internal.tier1;

import static org.jadice.jpeg2000.internal.tier1.States.*;

import org.jadice.jpeg2000.internal.image.CodeBlockMock;
import org.jadice.jpeg2000.internal.image.CodeBlockState;
import org.jadice.jpeg2000.internal.image.DefaultGridRegion;
import org.jadice.jpeg2000.internal.image.Pair;
import org.jadice.jpeg2000.internal.image.Region;
import org.jadice.jpeg2000.internal.image.SubbandType;
import org.jadice.jpeg2000.internal.tier1.CleanupPass;
import org.jadice.jpeg2000.internal.tier1.Pass;
import org.jadice.jpeg2000.internal.tier1.RefinementPass;
import org.jadice.jpeg2000.internal.tier1.SignificancePass;

public class BlockDecoding_p0_01_t0c0r1b1p0cb0_Test extends BlockDecodingTraceTestBase {

  @Override
  protected void initCodeBlock() {
    blockIndices = new Pair(0, 0);
    blockRegion = new Region(16, 16);
    blockWidth = blockRegion.size.x;
    block = new CodeBlockMock();
    block.indices = blockIndices;
    block.setGridRegion(new DefaultGridRegion(blockRegion));
    block.state = new CodeBlockState();
    block.state.sampleBuffer = new int[256];
    block.numStripes = 4;
    block.stripeHeights = new int[]{4, 4, 4, 4};
    block.state.bitplane = 27;
    ctxRowGap = 19;
    block.state.ctxBuffer = new int[115];
    block.state.ctxBuffer[36] = 1226833920;
    block.state.ctxBuffer[37] = 1226833920;
    block.state.ctxBuffer[38] = 1226833920;
    block.state.ctxBuffer[55] = 1226833920;
    block.state.ctxBuffer[56] = 1226833920;
    block.state.ctxBuffer[57] = 1226833920;
    block.state.ctxBuffer[74] = 1226833920;
    block.state.ctxBuffer[75] = 1226833920;
    block.state.ctxBuffer[76] = 1226833920;
    block.state.ctxBuffer[93] = 1226833920;
    block.state.ctxBuffer[94] = 1226833920;
    block.state.ctxBuffer[95] = 1226833920;
    subbandType = SubbandType.HL;
  }

  protected Pass[] createPasses() {
    return new Pass[]{
        /*bitplane 27*/new CleanupPass(),
        /*bitplane 26*/new SignificancePass(), new RefinementPass(), new CleanupPass(),
        /*bitplane 25*/new SignificancePass(), new RefinementPass(), new CleanupPass(),
        /*bitplane 24*/new SignificancePass(), new RefinementPass(), new CleanupPass(),
        /*bitplane 23*/new SignificancePass(), new RefinementPass(), new CleanupPass(),
        /*bitplane 22*/new SignificancePass(), new RefinementPass(), new CleanupPass(),
        /*bitplane 21*/new SignificancePass(), new RefinementPass(), new CleanupPass(),
    };
  }

  protected int[][] createDecisions() {
    return new int[][]{{// Cleanup (bitplane 27):
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0,
    }, {  // Significance (bitplane 26):
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
    }, {  //     Refinement (bitplane 26):
        0, 0, 1, 1, 1, 1, 1, 0, 0, 0,
    }, {  // Cleanup (bitplane 26):
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
    }, {  // Significance (bitplane 25):
        0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
        1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 1, 0, 0,
    }, {  // Refinement (bitplane 25):
        0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0,
    }, {  // Cleanup (bitplane 25):
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0,
        1, 0, 0, 1, 1, 0, 0,
    }, {  // Significance (bitplane 24):
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0,
        0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
        0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0,
    }, {  // Refinement (bitplane 24):
        1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0,
        0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0,
    }, {  // Cleanup(bitplane 24):
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {  // Significance(bitplane 23):
        0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0,
        0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0,
    }, {  // Refinement(bitplane 23):
        1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,
        0, 0, 1, 1, 1, 1,
    }, {  // Cleanup(bitplane 23):
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {  // Significance (bitplane 22):
        0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
        0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        1, 0,
    }, {  // Refinement (bitplane 22):
        1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0,
        1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
        1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1,
    }, {  // Cleanup (bitplane 22):
        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
    }, {  // Significance (bitplane 21):
        1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0,
        0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0,
        1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1,
        1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0,
    }, {  // Refinement(bitplane 21):
        0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1,
        0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1,
        0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0,
        1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0,
    }, {  // Cleanup(bitplane 21):
        0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0,
    }};
  }

  protected int[][] createExpectedSamples() {
    return new int[][]{{// Cleanup bitplane: 27:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1946157056,
        201326592, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1946157056, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1946157056, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1946157056, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1946157056,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1946157056, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1946157056, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201326592, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1946157056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {// Significance bitplane: 26:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1946157056,
        201326592, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2046820352, 100663296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1946157056, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, -1946157056, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1946157056, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, -1946157056, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2046820352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -1946157056, 0, 0, 0, 0, 0, 100663296, 0, 0, 0, 0, 0, 0, 0, 0, 100663296, -2046820352, 0, 0, 0, -1946157056, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201326592, -2046820352, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -2046820352, -1946157056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {// Refinement bitplane: 26:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1979711488,
        167772160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2046820352, 100663296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1912602624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, -1912602624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1912602624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, -1912602624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2046820352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -1912602624, 0, 0, 0, 0, 0, 100663296, 0, 0, 0, 0, 0, 0, 0, 0, 100663296, -2046820352, 0, 0, 0, -1979711488, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 167772160, -2046820352, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -2046820352, -1979711488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {// Cleanup bitplane: 26:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1979711488,
        167772160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2046820352, 100663296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1912602624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, -1912602624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1912602624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -2046820352, 0, -1912602624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2046820352, 0, 100663296, 0, 0, 0,
        -2046820352, 0, 0, 0, -1912602624, 0, 0, 0, 0, 0, 100663296, 0, 0, 0, 0, 0, 0, -2046820352, 0, 100663296,
        -2046820352, 0, 0, 0, -1979711488, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 167772160, -2046820352, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2046820352, -1979711488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {// Significance bitplane: 25:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648,
        -1979711488, 167772160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648, -2046820352, 100663296, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1912602624, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1912602624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2097152000, 0, -1912602624,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2046820352, 0, -1912602624, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        50331648, 0, -2097152000, -2097152000, 0, -2097152000, -2046820352, -2097152000, 100663296, 50331648, 0,
        -2097152000, -2046820352, 50331648, 0, 0, -1912602624, 0, 0, 0, -2097152000, 50331648, 100663296, 0, 50331648,
        0, 0, 0, -2097152000, -2046820352, 50331648, 100663296, -2046820352, 0, -2097152000, 0, -1979711488, 0, 0,
        -2097152000, -2097152000, 0, 0, 0, 0, -2097152000, 50331648, 0, -2097152000, 167772160, -2046820352, 50331648,
        -2097152000, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648, 50331648, -2046820352, -1979711488,
        -2097152000, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {// Refinement bitplane: 25:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648,
        -1996488704, 150994944, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648, -2063597568, 83886080, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1895825408, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1929379840, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2097152000, 0, -1929379840,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2063597568, 0, -1929379840, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        50331648, 0, -2097152000, -2097152000, 0, -2097152000, -2063597568, -2097152000, 83886080, 50331648, 0,
        -2097152000, -2030043136, 50331648, 0, 0, -1929379840, 0, 0, 0, -2097152000, 50331648, 83886080, 0, 50331648, 0,
        0, 0, -2097152000, -2063597568, 50331648, 83886080, -2030043136, 0, -2097152000, 0, -1962934272, 0, 0,
        -2097152000, -2097152000, 0, 0, 0, 0, -2097152000, 50331648, 0, -2097152000, 184549376, -2063597568, 50331648,
        -2097152000, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648, 50331648, -2063597568, -1962934272,
        -2097152000, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {// Cleanup bitplane: 25:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648,
        -1996488704, 150994944, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648, -2063597568, 83886080, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1895825408, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1929379840, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2097152000, 0, -1929379840,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2063597568, 0, -1929379840, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        50331648, 0, -2097152000, -2097152000, 0, -2097152000, -2063597568, -2097152000, 83886080, 50331648, 0,
        -2097152000, -2030043136, 50331648, 0, 0, -1929379840, 0, 0, 0, -2097152000, 50331648, 83886080, 0, 50331648, 0,
        0, 0, -2097152000, -2063597568, 50331648, 83886080, -2030043136, 0, -2097152000, 0, -1962934272, 0, 0,
        -2097152000, -2097152000, 0, 0, 50331648, 0, -2097152000, 50331648, 0, -2097152000, 184549376, -2063597568,
        50331648, -2097152000, 50331648, 0, 0, 0, 0, 0, 50331648, -2097152000, 0, 0, 0, 0, 50331648, 50331648,
        -2063597568, -1962934272, -2097152000, 0, 0, 0, -2097152000, 0, 0, 0, 0,
    }, {// Significance bitplane: 24:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648,
        -1996488704, 150994944, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50331648, -2063597568, 83886080, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 50331648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2122317824, 0, 0, -1895825408,
        25165824, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2122317824, 0, -1929379840, 25165824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, -2097152000, 0, -1929379840, 25165824, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2063597568, 0, -1929379840,
        50331648, 25165824, 0, 0, 0, 0, 25165824, 0, 0, 0, 50331648, 25165824, -2097152000, -2097152000, 25165824,
        -2097152000, -2063597568, -2097152000, 83886080, 50331648, 0, -2097152000, -2030043136, 50331648, 0, 0,
        -1929379840, 0, 0, 25165824, -2097152000, 50331648, 83886080, 25165824, 50331648, 25165824, -2122317824, 0,
        -2097152000, -2063597568, 50331648, 83886080, -2030043136, 0, -2097152000, 0, -1962934272, 0, 0, -2097152000,
        -2097152000, -2122317824, 0, 50331648, -2122317824, -2097152000, 50331648, 0, -2097152000, 184549376,
        -2063597568, 50331648, -2097152000, 50331648, 0, 25165824, 0, 0, 0, 50331648, -2097152000, -2122317824,
        -2122317824, -2122317824, 0, 50331648, 50331648, -2063597568, -1962934272, -2097152000, 25165824, 0,
        -2122317824, -2097152000, 0, 0, -2122317824, -2122317824,
    }, {// Refinement bitplane: 24:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58720256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41943040,
        -2004877312, 159383552, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58720256, -2071986176, 75497472, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 58720256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2122317824, 0, 0, -1904214016,
        25165824, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2122317824, 0, -1937768448, 25165824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, -2105540608, 0, -1937768448, 25165824, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2071986176, 0, -1920991232,
        41943040, 25165824, 0, 0, 0, 0, 25165824, 0, 0, 0, 58720256, 25165824, -2088763392, -2088763392, 25165824,
        -2105540608, -2071986176, -2088763392, 75497472, 41943040, 0, -2105540608, -2038431744, 41943040, 0, 0,
        -1937768448, 0, 0, 25165824, -2088763392, 41943040, 75497472, 25165824, 58720256, 25165824, -2122317824, 0,
        -2105540608, -2071986176, 58720256, 75497472, -2021654528, 0, -2105540608, 0, -1954545664, 0, 0, -2105540608,
        -2105540608, -2122317824, 0, 58720256, -2122317824, -2105540608, 41943040, 0, -2105540608, 176160768,
        -2055208960, 41943040, -2105540608, 58720256, 0, 25165824, 0, 0, 0, 41943040, -2105540608, -2122317824,
        -2122317824, -2122317824, 0, 58720256, 41943040, -2071986176, -1971322880, -2088763392, 25165824, 0,
        -2122317824, -2105540608, 0, 0, -2122317824, -2122317824,
    }, {// Cleanup bitplane: 24:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58720256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41943040,
        -2004877312, 159383552, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58720256, -2071986176, 75497472, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 58720256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2122317824, 0, 0, -1904214016,
        25165824, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2122317824, 0, -1937768448, 25165824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, -2105540608, 0, -1937768448, 25165824, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2071986176, 0, -1920991232,
        41943040, 25165824, 0, 0, 0, 0, 25165824, 0, 0, 0, 58720256, 25165824, -2088763392, -2088763392, 25165824,
        -2105540608, -2071986176, -2088763392, 75497472, 41943040, 0, -2105540608, -2038431744, 41943040, 0, 0,
        -1937768448, 0, 0, 25165824, -2088763392, 41943040, 75497472, 25165824, 58720256, 25165824, -2122317824, 0,
        -2105540608, -2071986176, 58720256, 75497472, -2021654528, 0, -2105540608, 0, -1954545664, 0, 0, -2105540608,
        -2105540608, -2122317824, 0, 58720256, -2122317824, -2105540608, 41943040, 0, -2105540608, 176160768,
        -2055208960, 41943040, -2105540608, 58720256, 0, 25165824, 0, 0, 0, 41943040, -2105540608, -2122317824,
        -2122317824, -2122317824, 0, 58720256, 41943040, -2071986176, -1971322880, -2088763392, 25165824, 0,
        -2122317824, -2105540608, 0, 0, -2122317824, -2122317824,
    }, {// Significance bitplane: 23:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 12582912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58720256, 12582912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 41943040, -2004877312, 159383552, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58720256, -2071986176, 75497472,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58720256, 0, 12582912, 12582912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -2122317824, 0, 0, -1904214016, 25165824, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2134900736, -2122317824, 0,
        -1937768448, 25165824, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2134900736, -2105540608, 0, -1937768448, 25165824, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2134900736, -2071986176, 0, -1920991232, 41943040, 25165824, -2134900736, 0, 0,
        0, 25165824, 0, 0, 0, 58720256, 25165824, -2088763392, -2088763392, 25165824, -2105540608, -2071986176,
        -2088763392, 75497472, 41943040, 0, -2105540608, -2038431744, 41943040, -2134900736, 12582912, -1937768448, 0,
        0, 25165824, -2088763392, 41943040, 75497472, 25165824, 58720256, 25165824, -2122317824, 12582912, -2105540608,
        -2071986176, 58720256, 75497472, -2021654528, 12582912, -2105540608, 12582912, -1954545664, 0, 12582912,
        -2105540608, -2105540608, -2122317824, 12582912, 58720256, -2122317824, -2105540608, 41943040, -2134900736,
        -2105540608, 176160768, -2055208960, 41943040, -2105540608, 58720256, 12582912, 25165824, 0, 0, 0, 41943040,
        -2105540608, -2122317824, -2122317824, -2122317824, 0, 58720256, 41943040, -2071986176, -1971322880,
        -2088763392, 25165824, 0, -2122317824, -2105540608, 12582912, 0, -2122317824, -2122317824,
    }, {// Refinement bitplane: 23:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 12582912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62914560, 12582912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 37748736, -2009071616, 155189248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54525952, -2076180480, 71303168,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62914560, 0, 12582912, 12582912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -2126512128, 0, 0, -1908408320, 29360128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2134900736, -2126512128, 0,
        -1941962752, 29360128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2134900736, -2101346304, 0, -1941962752, 29360128, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2134900736, -2076180480, 0, -1916796928, 46137344, 20971520, -2134900736, 0, 0,
        0, 20971520, 0, 0, 0, 54525952, 29360128, -2092957696, -2084569088, 20971520, -2109734912, -2067791872,
        -2084569088, 71303168, 37748736, 0, -2109734912, -2042626048, 37748736, -2134900736, 12582912, -1933574144, 0,
        0, 20971520, -2084569088, 46137344, 79691776, 20971520, 54525952, 20971520, -2118123520, 12582912, -2101346304,
        -2067791872, 54525952, 71303168, -2025848832, 12582912, -2109734912, 12582912, -1958739968, 0, 12582912,
        -2101346304, -2109734912, -2126512128, 12582912, 54525952, -2126512128, -2101346304, 37748736, -2134900736,
        -2109734912, 180355072, -2059403264, 46137344, -2109734912, 62914560, 12582912, 29360128, 0, 0, 0, 37748736,
        -2109734912, -2118123520, -2126512128, -2126512128, 0, 62914560, 37748736, -2076180480, -1975517184,
        -2084569088, 29360128, 0, -2126512128, -2109734912, 12582912, 0, -2126512128, -2118123520,
    }, {// Cleanup bitplane: 23:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 12582912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62914560, 12582912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 37748736, -2009071616, 155189248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54525952, -2076180480, 71303168,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62914560, 0, 12582912, 12582912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -2126512128, 0, 0, -1908408320, 29360128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2134900736, -2126512128, 0,
        -1941962752, 29360128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2134900736, -2101346304, 0, -1941962752, 29360128, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2134900736, -2076180480, 0, -1916796928, 46137344, 20971520, -2134900736, 0, 0,
        0, 20971520, 0, 0, 0, 54525952, 29360128, -2092957696, -2084569088, 20971520, -2109734912, -2067791872,
        -2084569088, 71303168, 37748736, 0, -2109734912, -2042626048, 37748736, -2134900736, 12582912, -1933574144, 0,
        0, 20971520, -2084569088, 46137344, 79691776, 20971520, 54525952, 20971520, -2118123520, 12582912, -2101346304,
        -2067791872, 54525952, 71303168, -2025848832, 12582912, -2109734912, 12582912, -1958739968, 0, 12582912,
        -2101346304, -2109734912, -2126512128, 12582912, 54525952, -2126512128, -2101346304, 37748736, -2134900736,
        -2109734912, 180355072, -2059403264, 46137344, -2109734912, 62914560, 12582912, 29360128, 0, 0, 0, 37748736,
        -2109734912, -2118123520, -2126512128, -2126512128, 0, 62914560, 37748736, -2076180480, -1975517184,
        -2084569088, 29360128, 0, -2126512128, -2109734912, 12582912, 0, -2126512128, -2118123520,
    }, {// Significance bitplane: 22:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 6291456, 0, 12582912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 62914560, 12582912, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 37748736, -2009071616, 155189248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54525952,
        -2076180480, 71303168, -2141192192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2141192192, 62914560, 6291456, 12582912,
        12582912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2126512128, 6291456, 0, -1908408320, 29360128, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, -2134900736, -2126512128, 6291456, -1941962752, 29360128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -2134900736, -2101346304, 0, -1941962752, 29360128, -2141192192, 0, 0, 0, -2141192192, 0, 0, 0, 0, 0, 0,
        -2134900736, -2076180480, 6291456, -1916796928, 46137344, 20971520, -2134900736, -2141192192, 0, 0, 20971520,
        6291456, 0, 6291456, 54525952, 29360128, -2092957696, -2084569088, 20971520, -2109734912, -2067791872,
        -2084569088, 71303168, 37748736, 0, -2109734912, -2042626048, 37748736, -2134900736, 12582912, -1933574144, 0,
        6291456, 20971520, -2084569088, 46137344, 79691776, 20971520, 54525952, 20971520, -2118123520, 12582912,
        -2101346304, -2067791872, 54525952, 71303168, -2025848832, 12582912, -2109734912, 12582912, -1958739968, 0,
        12582912, -2101346304, -2109734912, -2126512128, 12582912, 54525952, -2126512128, -2101346304, 37748736,
        -2134900736, -2109734912, 180355072, -2059403264, 46137344, -2109734912, 62914560, 12582912, 29360128, 6291456,
        0, 0, 37748736, -2109734912, -2118123520, -2126512128, -2126512128, -2141192192, 62914560, 37748736,
        -2076180480, -1975517184, -2084569088, 29360128, 0, -2126512128, -2109734912, 12582912, 6291456, -2126512128,
        -2118123520,
    }, {// Refinement bitplane: 22:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 6291456, 0, 10485760, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 65011712, 14680064, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 35651584, -2006974464, 157286400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52428800,
        -2078277632, 73400320, -2141192192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2141192192, 65011712, 6291456, 14680064,
        14680064, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2128609280, 6291456, 0, -1906311168, 31457280, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, -2132803584, -2124414976, 6291456, -1944059904, 31457280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -2132803584, -2099249152, 0, -1939865600, 27262976, -2141192192, 0, 0, 0, -2141192192, 0, 0, 0, 0, 0, 0,
        -2136997888, -2078277632, 6291456, -1918894080, 48234496, 23068672, -2136997888, -2141192192, 0, 0, 18874368,
        6291456, 0, 6291456, 56623104, 27262976, -2090860544, -2086666240, 18874368, -2111832064, -2069889024,
        -2086666240, 73400320, 39845888, 0, -2111832064, -2044723200, 35651584, -2136997888, 14680064, -1935671296, 0,
        6291456, 23068672, -2082471936, 44040192, 77594624, 18874368, 52428800, 23068672, -2120220672, 14680064,
        -2103443456, -2069889024, 52428800, 69206016, -2023751680, 10485760, -2111832064, 10485760, -1956642816, 0,
        14680064, -2103443456, -2111832064, -2124414976, 14680064, 52428800, -2124414976, -2103443456, 39845888,
        -2132803584, -2107637760, 182452224, -2057306112, 44040192, -2111832064, 60817408, 14680064, 31457280, 6291456,
        0, 0, 35651584, -2107637760, -2116026368, -2124414976, -2128609280, -2141192192, 60817408, 35651584,
        -2078277632, -1977614336, -2086666240, 31457280, 0, -2124414976, -2111832064, 10485760, 6291456, -2128609280,
        -2116026368,
    }, {// Cleanup bitplane: 22:
        0, 0, 0, 6291456, 0, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 6291456, 6291456, 0, 10485760, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 65011712,
        14680064, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35651584, -2006974464, 157286400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 52428800, -2078277632, 73400320, -2141192192, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2141192192, 0, -2141192192,
        65011712, 6291456, 14680064, 14680064, 0, 0, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, -2128609280, 6291456, 0,
        -1906311168, 31457280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2132803584, -2124414976, 6291456, -1944059904,
        31457280, 0, 0, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, -2132803584, -2099249152, 0, -1939865600, 27262976,
        -2141192192, 0, 0, 0, -2141192192, 0, 0, 0, 0, 0, 0, -2136997888, -2078277632, 6291456, -1918894080, 48234496,
        23068672, -2136997888, -2141192192, 0, 0, 18874368, 6291456, 0, 6291456, 56623104, 27262976, -2090860544,
        -2086666240, 18874368, -2111832064, -2069889024, -2086666240, 73400320, 39845888, 0, -2111832064, -2044723200,
        35651584, -2136997888, 14680064, -1935671296, 0, 6291456, 23068672, -2082471936, 44040192, 77594624, 18874368,
        52428800, 23068672, -2120220672, 14680064, -2103443456, -2069889024, 52428800, 69206016, -2023751680, 10485760,
        -2111832064, 10485760, -1956642816, 0, 14680064, -2103443456, -2111832064, -2124414976, 14680064, 52428800,
        -2124414976, -2103443456, 39845888, -2132803584, -2107637760, 182452224, -2057306112, 44040192, -2111832064,
        60817408, 14680064, 31457280, 6291456, 0, 0, 35651584, -2107637760, -2116026368, -2124414976, -2128609280,
        -2141192192, 60817408, 35651584, -2078277632, -1977614336, -2086666240, 31457280, 0, -2124414976, -2111832064,
        10485760, 6291456, -2128609280, -2116026368,
    }, {// Significance bitplane: 21:
        0, 0, 3145728, 6291456, 0, 6291456, 0, 3145728, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3145728, 3145728, 3145728, 0,
        6291456, 3145728, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2144337920, 3145728, 6291456, 6291456, -2144337920, 10485760,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3145728, 0, 0, 6291456, 65011712, 14680064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -2144337920, -2144337920, 3145728, 3145728, 35651584, -2006974464, 157286400, 3145728, 3145728, 0, -2144337920,
        -2144337920, 3145728, 3145728, 0, 0, 0, 0, 0, -2144337920, 52428800, -2078277632, 73400320, -2141192192, 0,
        3145728, 0, 0, 0, 0, -2144337920, 0, 0, -2141192192, 0, -2141192192, 65011712, 6291456, 14680064, 14680064,
        3145728, 3145728, 6291456, 0, 0, 0, -2144337920, 0, 0, 0, 0, -2128609280, 6291456, 3145728, -1906311168,
        31457280, -2144337920, 0, 3145728, 0, 0, 0, 0, 0, 0, 0, 3145728, -2132803584, -2124414976, 6291456, -1944059904,
        31457280, 3145728, 3145728, 6291456, 3145728, 0, 3145728, 0, 0, 0, 0, 3145728, -2132803584, -2099249152,
        3145728, -1939865600, 27262976, -2141192192, -2144337920, 3145728, -2144337920, -2141192192, -2144337920,
        -2144337920, 3145728, 0, 0, 0, -2136997888, -2078277632, 6291456, -1918894080, 48234496, 23068672, -2136997888,
        -2141192192, 0, 0, 18874368, 6291456, 3145728, 6291456, 56623104, 27262976, -2090860544, -2086666240, 18874368,
        -2111832064, -2069889024, -2086666240, 73400320, 39845888, 3145728, -2111832064, -2044723200, 35651584,
        -2136997888, 14680064, -1935671296, 3145728, 6291456, 23068672, -2082471936, 44040192, 77594624, 18874368,
        52428800, 23068672, -2120220672, 14680064, -2103443456, -2069889024, 52428800, 69206016, -2023751680, 10485760,
        -2111832064, 10485760, -1956642816, 0, 14680064, -2103443456, -2111832064, -2124414976, 14680064, 52428800,
        -2124414976, -2103443456, 39845888, -2132803584, -2107637760, 182452224, -2057306112, 44040192, -2111832064,
        60817408, 14680064, 31457280, 6291456, -2144337920, 0, 35651584, -2107637760, -2116026368, -2124414976,
        -2128609280, -2141192192, 60817408, 35651584, -2078277632, -1977614336, -2086666240, 31457280, 0, -2124414976,
        -2111832064, 10485760, 6291456, -2128609280, -2116026368,
    }, {// Refinement bitplane: 21:
        0, 0, 3145728, 5242880, 0, 5242880, 0, 3145728, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3145728, 3145728, 3145728, 0,
        5242880, 3145728, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2144337920, 3145728, 5242880, 5242880, -2144337920, 9437184, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 3145728, 0, 0, 7340032, 66060288, 15728640, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2144337920,
        -2144337920, 3145728, 3145728, 36700160, -2005925888, 156237824, 3145728, 3145728, 0, -2144337920, -2144337920,
        3145728, 3145728, 0, 0, 0, 0, 0, -2144337920, 53477376, -2079326208, 74448896, -2142240768, 0, 3145728, 0, 0, 0,
        0, -2144337920, 0, 0, -2142240768, 0, -2142240768, 66060288, 5242880, 15728640, 13631488, 3145728, 3145728,
        5242880, 0, 0, 0, -2144337920, 0, 0, 0, 0, -2129657856, 7340032, 3145728, -1907359744, 32505856, -2144337920, 0,
        3145728, 0, 0, 0, 0, 0, 0, 0, 3145728, -2131755008, -2125463552, 7340032, -1945108480, 30408704, 3145728,
        3145728, 5242880, 3145728, 0, 3145728, 0, 0, 0, 0, 3145728, -2133852160, -2098200576, 3145728, -1938817024,
        26214400, -2142240768, -2144337920, 3145728, -2144337920, -2142240768, -2144337920, -2144337920, 3145728, 0, 0,
        0, -2138046464, -2077229056, 5242880, -1919942656, 47185920, 24117248, -2138046464, -2140143616, 0, 0, 17825792,
        5242880, 3145728, 5242880, 57671680, 26214400, -2091909120, -2087714816, 19922944, -2110783488, -2070937600,
        -2087714816, 72351744, 40894464, 3145728, -2112880640, -2043674624, 34603008, -2135949312, 13631488,
        -1936719872, 3145728, 7340032, 24117248, -2081423360, 45088768, 76546048, 17825792, 53477376, 22020096,
        -2121269248, 13631488, -2102394880, -2070937600, 53477376, 68157440, -2024800256, 11534336, -2112880640,
        11534336, -1957691392, 0, 13631488, -2102394880, -2112880640, -2125463552, 15728640, 53477376, -2123366400,
        -2102394880, 40894464, -2131755008, -2106589184, 183500800, -2058354688, 45088768, -2110783488, 61865984,
        15728640, 30408704, 7340032, -2144337920, 0, 34603008, -2106589184, -2114977792, -2125463552, -2129657856,
        -2142240768, 59768832, 36700160, -2077229056, -1978662912, -2087714816, 32505856, 0, -2125463552, -2110783488,
        11534336, 5242880, -2127560704, -2117074944,
    }, {// Cleanup bitplane: 21:
        0, 0, 3145728, 5242880, 0, 5242880, 0, 3145728, 0, 0, 0, 0, 0, 3145728, -2144337920, 0, 3145728, 0, 3145728,
        3145728, 3145728, 0, 5242880, 3145728, 0, 3145728, 3145728, 0, 0, 0, 3145728, 3145728, 0, 0, -2144337920,
        3145728, 5242880, 5242880, -2144337920, 9437184, 0, 3145728, 3145728, 0, 0, 0, 0, 0, -2144337920, 3145728,
        3145728, 0, 0, 7340032, 66060288, 15728640, 0, 0, 0, 3145728, 0, 0, 0, -2144337920, 0, -2144337920, -2144337920,
        3145728, 3145728, 36700160, -2005925888, 156237824, 3145728, 3145728, 0, -2144337920, -2144337920, 3145728,
        3145728, 0, 3145728, 0, 0, 0, -2144337920, 53477376, -2079326208, 74448896, -2142240768, 0, 3145728, 0, 0, 0, 0,
        -2144337920, 3145728, 0, -2142240768, 0, -2142240768, 66060288, 5242880, 15728640, 13631488, 3145728, 3145728,
        5242880, 0, 0, 0, -2144337920, 0, 0, 0, 0, -2129657856, 7340032, 3145728, -1907359744, 32505856, -2144337920, 0,
        3145728, 0, 0, 0, 0, 3145728, 0, 0, 3145728, -2131755008, -2125463552, 7340032, -1945108480, 30408704, 3145728,
        3145728, 5242880, 3145728, 0, 3145728, 0, -2144337920, 0, 0, 3145728, -2133852160, -2098200576, 3145728,
        -1938817024, 26214400, -2142240768, -2144337920, 3145728, -2144337920, -2142240768, -2144337920, -2144337920,
        3145728, 0, 0, 0, -2138046464, -2077229056, 5242880, -1919942656, 47185920, 24117248, -2138046464, -2140143616,
        0, 0, 17825792, 5242880, 3145728, 5242880, 57671680, 26214400, -2091909120, -2087714816, 19922944, -2110783488,
        -2070937600, -2087714816, 72351744, 40894464, 3145728, -2112880640, -2043674624, 34603008, -2135949312,
        13631488, -1936719872, 3145728, 7340032, 24117248, -2081423360, 45088768, 76546048, 17825792, 53477376,
        22020096, -2121269248, 13631488, -2102394880, -2070937600, 53477376, 68157440, -2024800256, 11534336,
        -2112880640, 11534336, -1957691392, 0, 13631488, -2102394880, -2112880640, -2125463552, 15728640, 53477376,
        -2123366400, -2102394880, 40894464, -2131755008, -2106589184, 183500800, -2058354688, 45088768, -2110783488,
        61865984, 15728640, 30408704, 7340032, -2144337920, 0, 34603008, -2106589184, -2114977792, -2125463552,
        -2129657856, -2142240768, 59768832, 36700160, -2077229056, -1978662912, -2087714816, 32505856, 0, -2125463552,
        -2110783488, 11534336, 5242880, -2127560704, -2117074944,
    }
    };
  }

  @Override
  protected int[][] createExpectedContexts() {
    return new int[][]{{//   bitplane:27:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131072, -2147287040, 98304, 32768, 0,
        0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 0, 0, 32, 2768944, -804708328, 36872, 0, 0, 0, 0,
        0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 131072, -2147418112, 32768, 0, 0, 2340, 191628434, 585, 0, 0, 0,
        0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 32, 2623504, 33555464, 512, 16640, 1363157120, 4160, 0, 0, 0,
        0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//    bitplane:26:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 537001984, -1610416128, 536969216,
        536903680, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 0, 0, 9437472, 631914928,
        -729210664, 613453896, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 537001984, -1610547200,
        536903680, 0, 0, 613419300, 728646802, 1687233097, 604016640, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920,
        1226833920, 256, 76546464, 631769296, 579865672, 746604032, 1687184128, 1431318656, 613421156, 9699346, 9437193,
        0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//   bitplane:26:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 537001984, -1610416128, 536969216,
        536903680, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 0, 0, 9437472, 631914928,
        -729210664, 613453896, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 537001984, -1610547200,
        536903680, 0, 0, 613419300, 728646802, 1687233097, 604016640, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920,
        1226833920, 256, 76546464, 631769296, 579865672, 746604032, 1687184128, 1431318656, 613421156, 9699346, 9437193,
        0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//   bitplane:26:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131072, -2147287040, 98304, 32768, 0,
        0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 0, 0, 288, 23740848, -800513832, 36936, 0, 0, 0,
        0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 131072, -2147418112, 32768, 2048, 167773184, 2852, 191775890,
        1342251593, 53248, 268443648, 4096, 0, 16384, 1342316544, -2147414016, 1226866688, 1226833920, 1226833920, 256,
        4194720, 23595216, 33557576, 167790080, 1342202624, 1363161216, 4196, 786450, 13, 2, 1, 0, 4, 262178, 2621457,
        1226833928, 1226833920, 1226833920, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//    bitplane:25:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131072, 537083904, -1610375168,
        604082176, 536903680, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 0, 2336, 613418420,
        627721210, -733404967, 613453896, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 537018368,
        -1610539008, 604033024, 1686137088, 1803695232, -1533846684, 1802497170, 1418851913, 1686303232, 335638528,
        604024832, 604000256, 1677877248, -737972224, -1543393280, 1226870784, 1226833920, 1226836224, 613418368,
        609225700, 761810130, 579891021, 731152006, 1419018083, 1567653557, 1687434878, 613159711, 93585839, 93323479,
        76546123, 1048581, 1310758, 11796791, 94896283, 1226833993, 1226833920, 1226833920, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//    bitplane:25:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131072, 537083904, -1610375168,
        604082176, 536903680, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 0, 2336, 613418420,
        627721210, -733404967, 613453896, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 537018368,
        -1610539008, 604033024, 1686137088, 1803695232, -1533846684, 1802497170, 1418851913, 1686303232, 335638528,
        604024832, 604000256, 1677877248, -737972224, -1543393280, 1226870784, 1226833920, 1226836224, 613418368,
        609225700, 761810130, 579891021, 731152006, 1419018083, 1567653557, 1687434878, 613159711, 93585839, 93323479,
        76546123, 1048581, 1310758, 11796791, 94896283, 1226833993, 1226833920, 1226833920, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//   bitplane:25:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131072, 212992, -1878810624, 102400,
        32768, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 0, 2336, 38274484, 23741434,
        -800513831, 36936, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 147456, -1878974464, 53248,
        1342204160, 1531065472, -2147263644, 1534061714, 1375860297, 1342370304, 268529664, 268480512, 20480,
        1342332928, -805081088, -1878937600, 1226870784, 1226833920, 1226836224, 37750144, 4197348, 191384786,
        302018381, 457473670, 1376026467, 1533574837, 1376532094, 791327, 21234095, 21512407, 1342185547, 6405,
        38014118, 170657655, 23593627, 1226833993, 1226833920, 1226833920, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0,
    }, {//   bitplane:24:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 537001984, 604192768, -1811701760,
        604082176, 536903680, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 16384, 1687300384,
        -1572268620, 627753978, -733257511, 613527624, 604016640, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920,
        0, 604127232, -1811849216, 605089796, 1419147554, 1534293137, -1533805716, 1534066102, 1385430747, 1418982985,
        344191488, 335785984, -1543385088, 1409476608, -737971200, -1803439616, 1226870784, 1226833920, 1226852608,
        1649436032, 1682979812, 728259798, 311455567, 458522279, 1385463671, 1533574847, 1384937087, 613169983,
        626283967, 1699243007, 1435513083, 615520605, 575950254, 1806462967, 1835546331, 1226838601, 1226833920,
        1226833924, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//    bitplane:24:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 537001984, 604192768, -1811701760,
        604082176, 536903680, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 16384, 1687300384,
        -1572268620, 627753978, -733257511, 613527624, 604016640, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920,
        0, 604127232, -1811849216, 605089796, 1419147554, 1534293137, -1533805716, 1534066102, 1385430747, 1418982985,
        344191488, 335785984, -1543385088, 1409476608, -737971200, -1803439616, 1226870784, 1226833920, 1226852608,
        1649436032, 1682979812, 728259798, 311455567, 458522279, 1385463671, 1533574847, 1384937087, 613169983,
        626283967, 1699243007, 1435513083, 615520605, 575950254, 1806462967, 1835546331, 1226838601, 1226833920,
        1226833924, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//   bitplane:24:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131072, 212992, -1878810624, 102400,
        32768, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 16384, 1342318880, -2109139532,
        23774202, -800366375, 268546120, 36864, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 147456,
        -1878958080, 268496900, 1342601506, 1533768849, -1878787220, 1534066102, 1380712155, 1375991369, 268694016,
        268677120, -2147364864, 1342367744, -771525632, -1878937088, 1226870784, 1226833920, 1226852608, 1379952000,
        1346386916, 191388886, 302018383, 457473703, 1376550775, 1533574847, 1376548479, 269237055, 55334335,
        1363698687, 1363685627, 2627933, 38030766, 1533833207, 1533556443, 1226838601, 1226833920, 1226833924, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//   bitplane:23:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 537001984, 604192768, -1811683328,
        604091392, 612405760, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 604127232, -728553184,
        -1572235852, 627756030, -733254437, 345093705, 612405760, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226964992,
        -2147287040, 604225536, -1811816448, 336656676, 1572240818, 1533769433, -1802241172, 1534066102, 1380712155,
        1385430601, 478410240, 344175104, -1543254016, 1417930752, -763104256, -1803439616, 1226870784, 1226833920,
        1226852640, 1383099824, 1548763132, 728260574, 311455695, 458522599, 1384939511, 1533574911, 1384939391,
        344735679, 592205823, 1430807551, 1430811131, 615004669, 575954430, 1533833215, 1533556443, 1226838601,
        1226833920, 1226833924, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//   bitplane:23:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 537001984, 604192768, -1811683328,
        604091392, 612405760, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 604127232, -728553184,
        -1572235852, 627756030, -733254437, 345093705, 612405760, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226964992,
        -2147287040, 604225536, -1811816448, 336656676, 1572240818, 1533769433, -1802241172, 1534066102, 1380712155,
        1385430601, 478410240, 344175104, -1543254016, 1417930752, -763104256, -1803439616, 1226870784, 1226833920,
        1226852640, 1383099824, 1548763132, 728260574, 311455695, 458522599, 1384939511, 1533574911, 1384939391,
        344735679, 592205823, 1430807551, 1430811131, 615004669, 575954430, 1533833215, 1533556443, 1226838601,
        1226833920, 1226833924, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//   bitplane:23:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131072, 212992, -1878792192, 302101504,
        37376, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 147456, -805099232, -2109106764,
        23776254, -766808869, 302102089, 37376, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226964992, -2147287040,
        245760, -1878925312, 268499236, 1533967794, 1533769433, -1878787220, 1534066102, 1380712155, 1375993417,
        436467200, 268677632, -2147233792, 1342433280, -771492864, -1878937088, 1226870784, 1226833920, 1226852640,
        1382575536, 1514684412, 191389662, 306212815, 457474023, 1380745207, 1533574911, 1376550783, 306986943,
        55334911, 1363698687, 1363702267, 275266045, 38559230, 1533833215, 1533556443, 1226838601, 1226833920,
        1226833924, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//   bitplane:22:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 537020416, 604202240, -1803289984,
        311538752, 612405760, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 604129280, -594318044,
        -1572094026, 627826687, -766775333, 328316617, 613454400, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226964992,
        -1610399744, 604233728, -1811812352, 345176356, 1534033334, 1533804283, -1802240131, 1534066622, 1380712411,
        1402207945, 445906496, 478393856, -1534864640, 1434708096, -762053568, -1803438592, 1226871296, 1226833920,
        1226852640, 1382575540, 1514700798, 1802010591, 307265519, 458522615, 1380745215, 1533574911, 1384939391,
        306986943, 592207871, 1430808575, 1430811643, 342391293, 575438334, 1533837311, 1533556443, 1226838601,
        1226833920, 1226833924, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//   bitplane:22:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 537020416, 604202240, -1803289984,
        311538752, 612405760, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 0, 0, 604129280, -594318044,
        -1572094026, 627826687, -766775333, 328316617, 613454400, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226964992,
        -1610399744, 604233728, -1811812352, 345176356, 1534033334, 1533804283, -1802240131, 1534066622, 1380712411,
        1402207945, 445906496, 478393856, -1534864640, 1434708096, -762053568, -1803438592, 1226871296, 1226833920,
        1226852640, 1382575540, 1514700798, 1802010591, 307265519, 458522615, 1380745215, 1533574911, 1384939391,
        306986943, 592207871, 1430808575, 1430811643, 342391293, 575438334, 1533837311, 1533556443, 1226838601,
        1226833920, 1226833924, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//    bitplane:22:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 526352, 33705000, 302737168, -1874593144,
        302101568, 37376, 0, 0, 0, 0, 0, 0, 0, 1226833920, 1226833920, 1226833920, 0, 2048, 167773184, 150016,
        -637309660, -1840529482, 57401343, -766775333, 323073737, 37440, 133120, 33620992, 33280, 0, 0, 0, 1226833920,
        1226833920, 1226964992, -2147270656, 268689408, -1878921216, 268630308, 1534033334, 1533804283, -1844707459,
        1534066622, 1380712411, 1396965065, 436469344, 436975120, -2147233016, 1363404928, -771490752, -1845381632,
        1226871296, 1226833920, 1226852640, 1382575540, 1514700798, 1533575135, 306216943, 457998327, 1380745215,
        1533574911, 1376550783, 306986943, 55336959, 1397254143, 1363702779, 275282429, 307002878, 1533837311,
        1533556443, 1226838601, 1226833920, 1226833924, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    }, {//    bitplane:21:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131072, -2147268320, -1399607888, 613130200,
        580112104, 311160656, -1672216664, 311670480, 613651016, 98304, 163840, -2147287040, -2147254272, 229376, 98304,
        32768, 1226833920, 1226833920, 1226833920, 32, 615516212, 716309562, 613632825, -611062340, -1840513026,
        594280447, -766771205, 324271865, 1687404376, 613670568, 582198896, 615617080, 9601080, 9505048, 764445832,
        1226834496, 1226833920, 1226983424, -1543281664, 344191488, -1811680992, 345242036, 1534066174, 1533804543,
        -1836318721, 1534066687, 1380712447, 1398276091, 462684157, 445380602, -1517030439, 1431566824, -745275952,
        -1819167032, 1226871360, 1226833920, 1226852644, 1382575542, 1514700799, 1533575167, 307265535, 457998335,
        1380745215, 1533574911, 1384939391, 306986943, 592207871, 1397256191, 1565030399, 342391807, 307002879,
        1533837311, 1533556443, 1226838601, 1226833920, 1226833924, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0,
    }, {//   bitplane:21:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131072, -2147268320, -1399607888, 613130200,
        580112104, 311160656, -1672216664, 311670480, 613651016, 98304, 163840, -2147287040, -2147254272, 229376, 98304,
        32768, 1226833920, 1226833920, 1226833920, 32, 615516212, 716309562, 613632825, -611062340, -1840513026,
        594280447, -766771205, 324271865, 1687404376, 613670568, 582198896, 615617080, 9601080, 9505048, 764445832,
        1226834496, 1226833920, 1226983424, -1543281664, 344191488, -1811680992, 345242036, 1534066174, 1533804543,
        -1836318721, 1534066687, 1380712447, 1398276091, 462684157, 445380602, -1517030439, 1431566824, -745275952,
        -1819167032, 1226871360, 1226833920, 1226852644, 1382575542, 1514700799, 1533575167, 307265535, 457998335,
        1380745215, 1533574911, 1384939391, 306986943, 592207871, 1397256191, 1565030399, 342391807, 307002879,
        1533837311, 1533556443, 1226838601, 1226833920, 1226833924, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0,
    }, {//    bitplane:21:
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16640, 1346527360, -1878820512, -1706312272, 38510552,
        37998312, 302772048, -1706819672, 306951888, 236360, 37850496, 37930688, -1878842816, -2147250144, 753968,
        6930840, 1346412744, 1226838080, 1226833920, 1226967300, 38077606, 2656887, 170525755, 740153, -615780932,
        -1840513026, 325844991, -766771205, 323747577, 1376501592, 38002348, 304850546, 2724409, 688184, 592156,
        189039754, 1226834497, 1226833920, 1226983712, -1823775600, 268694088, -1878789856, 273414580, 1534066174,
        1533804543, -1840513025, 1534066687, 1380712447, 1397751803, 457965565, 441186298, -1857293351, 1363409384,
        -749994544, -1824409912, 1226871360, 1226833920, 1226852644, 1382575542, 1514700799, 1533575167, 306741247,
        457998335, 1380745215, 1533574911, 1376550783, 306986943, 55336959, 1397256191, 1531475967, 275282943,
        307002879, 1533837311, 1533556443, 1226838601, 1226833920, 1226833924, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
    }
    };
  }

  @Override
  protected CtxExpectation[][] createCtxExpectations() {
    return new CtxExpectation[][]{{// Cleanup (bitplane 27):
        /*0*/ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        /*20*/ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_UNI), ctx(KAPPA_UNI), ctx(KAPPA_SIGN_BASE, 0), /*26*/ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 3), ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0), ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5), ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5), ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5), ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), 
        ctx(KAPPA_RUN), ctx(KAPPA_UNI), ctx(KAPPA_UNI), ctx(KAPPA_SIGN_BASE, 0), ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0), ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_UNI), ctx(KAPPA_UNI), ctx(KAPPA_SIGN_BASE, 0), ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0), ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN),
    }, {//   Significance (bitplane 26):
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 5),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
    },{//    Refinement (bitplane 26):
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 0), ctx(KAPPA_MAG_BASE, 1),
    }, {//    Cleanup (bitplane 26):
        ctx(KAPPA_RUN),ctx(KAPPA_RUN),ctx(KAPPA_RUN),ctx(KAPPA_RUN),ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),ctx(KAPPA_RUN),ctx(KAPPA_RUN),ctx(KAPPA_UNI),ctx(KAPPA_UNI),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),ctx(KAPPA_RUN),ctx(KAPPA_UNI),ctx(KAPPA_UNI),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_UNI), ctx(KAPPA_UNI), ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
    },{//   Significance (bitplane 25):
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 4),
        ctx(KAPPA_SIG_BASE, 4),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 4),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5)
    }, {//   Refinement (bitplane 25):
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1)
    }, {//    Cleanup (bitplane 25):
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 1),
    },{//   Significance (bitplane 24):
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_SIG_BASE, 4),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 4),
        ctx(KAPPA_SIG_BASE, 4),
        ctx(KAPPA_SIG_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_SIG_BASE, 4),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 5),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3), ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3), ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 6), ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3), ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 3), ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 6), ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 4),
    }, {//    Refinement (bitplane 24):
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 1),
    }, {//   Cleanup (bitplane 24):
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
    },{//   Significance (bitplane 23):
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 1), ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 4),
        ctx(KAPPA_SIG_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 6), ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3), ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
    },{//   Refinement (bitplane 23):
    ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(
        KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(
        KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(
        KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,2),ctx(
        KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,1),ctx(
        KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(
        KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(
        KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(
        KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(
        KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,2),ctx(
        KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(
        KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(
        KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(
        KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(
        KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,2),ctx(KAPPA_MAG_BASE,1),ctx(KAPPA_MAG_BASE,2),ctx(
        KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 1),
    }, {//   Cleanup (bitplane 23):
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
    },{//    Significance (bitplane 22):
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 1), ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 2), ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 4), ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1), ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 8), ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 7), ctx(KAPPA_SIGN_BASE, 1),
    }, {//   Refinement (bitplane 22):
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
    }, {//   Cleanup (bitplane 22):
        ctx(KAPPA_RUN),
        ctx(KAPPA_RUN),
        ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_UNI), ctx(KAPPA_UNI), ctx(KAPPA_SIGN_BASE, 0), ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_SIG_BASE, 3), ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1), ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_UNI), ctx(KAPPA_UNI), ctx(KAPPA_SIGN_BASE, 0), ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_RUN),
        ctx(KAPPA_RUN), ctx(KAPPA_UNI), ctx(KAPPA_UNI), ctx(KAPPA_SIGN_BASE, 0), ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1), ctx(KAPPA_RUN), ctx(KAPPA_RUN), ctx(KAPPA_RUN),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0), ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
    },{//    Significance (bitplane 21):
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 4),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 4),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 2),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 4),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 2),
        ctx(KAPPA_SIG_BASE, 8),
    },{//    Refinement (bitplane 21):
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 0), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 1),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 1), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
        ctx(KAPPA_MAG_BASE, 2), ctx(KAPPA_MAG_BASE, 2),
    }, {//    Cleanup (bitplane 21):
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 4),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 8),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 7),ctx(KAPPA_SIGN_BASE, 4),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 1),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 0),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),ctx(KAPPA_SIGN_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 7),
        ctx(KAPPA_SIG_BASE, 1),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 5),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 5),
        ctx(KAPPA_SIG_BASE, 0),
        ctx(KAPPA_SIG_BASE, 2),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 6),
        ctx(KAPPA_SIG_BASE, 0),ctx(KAPPA_SIGN_BASE, 0),
        ctx(KAPPA_SIG_BASE, 8),ctx(KAPPA_SIGN_BASE, 1),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3),
        ctx(KAPPA_SIG_BASE, 3)
    }};
  }
}
